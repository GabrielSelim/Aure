# üåê Configura√ß√£o Nginx - API Aure Production
# Arquivo: /etc/nginx/sites-available/aureapi.gabrielsanztech.com.br

# Redirecionamento HTTP -> HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name aureapi.gabrielsanztech.com.br;
    
    # Redirecionamento permanente para HTTPS
    return 301 https://$server_name$request_uri;
}

# Configura√ß√£o HTTPS
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name aureapi.gabrielsanztech.com.br;
    
    # Certificados SSL (Let's Encrypt)
    ssl_certificate /etc/letsencrypt/live/aureapi.gabrielsanztech.com.br/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/aureapi.gabrielsanztech.com.br/privkey.pem;
    
    # Configura√ß√µes SSL otimizadas
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;
    
    # OCSP Stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_trusted_certificate /etc/letsencrypt/live/aureapi.gabrielsanztech.com.br/chain.pem;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;
    
    # Headers de seguran√ßa
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self'; frame-ancestors 'none';" always;
    
    # Rate limiting (aplicado)
    limit_req zone=api burst=20 nodelay;
    
    # Upload de arquivos (avatars, documentos)
    client_max_body_size 10M;
    client_body_buffer_size 128k;
    client_body_timeout 60s;
    client_header_timeout 60s;
    
    # Compress√£o
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml
        text/css
        text/javascript
        text/xml
        text/plain;
    
    # Configura√ß√µes do proxy para a API
    location / {
        # Rate limiting para API
        limit_req zone=api burst=20 nodelay;
        
        proxy_pass http://127.0.0.1:5000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection keep-alive;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $server_name;
        proxy_cache_bypass $http_upgrade;
        
        # Timeouts otimizados
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Buffer settings
        proxy_buffering on;
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;
    }
    
    # Health check endpoint - sem rate limiting
    location /health {
        proxy_pass http://127.0.0.1:5000/health;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Permitir acesso de monitoramento
        allow 127.0.0.1;
        allow ::1;
        # Adicione IPs de monitoramento aqui se necess√°rio
        # allow IP_DO_MONITOR;
    }
    
    # Bloquear acesso a arquivos sens√≠veis
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~ \.(env|config|ini)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Logs
    access_log /var/log/nginx/aureapi_access.log combined;
    error_log /var/log/nginx/aureapi_error.log warn;
    
    # Robots.txt - bloquear crawlers na API
    location = /robots.txt {
        add_header Content-Type text/plain;
        return 200 "User-agent: *\nDisallow: /\n";
    }
}

# Configura√ß√£o de upstream para alta disponibilidade (futuro)
# upstream aure_api {
#     server 127.0.0.1:5000 max_fails=3 fail_timeout=30s;
#     # server 127.0.0.1:5001 max_fails=3 fail_timeout=30s backup;
# }