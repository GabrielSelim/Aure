version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: aure-postgres
    environment:
      POSTGRES_DB: aure_db
      POSTGRES_USER: aure_user
      POSTGRES_PASSWORD: aure_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - aure-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U aure_user -d aure_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: aure-redis
    ports:
      - "6379:6379"
    networks:
      - aure-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: aure-api
    ports:
      - "8080:8080"
      - "8081:8081"
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:8080;https://+:8081
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=aure_db;Username=aure_user;Password=aure_password;Include Error Detail=true
      - Redis__ConnectionString=redis:6379
      - ASPNETCORE_HTTPS_PORTS=8081
      - ASPNETCORE_HTTP_PORTS=8080
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - aure-network
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  aure-network:
    driver: bridge